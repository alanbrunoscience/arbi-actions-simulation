name: Build and Deploy

on:
  push:
  # pull_request:
  #   branches: [ master ]
  #   types: [closed]

env:
  RUNDATE: $(date +"%Y%m%d_")
  REPO_NAME: ${GITHUB_REPOSITORY}

jobs:
  Build_application:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: echo a string
        run: echo "Hello World"
      - name: multiline script
        run: |
          node -v
          npm -v
      - name: python commands
        run: |
          nameRepo = ${{ env.REPO_NAME }}
          print(nameRepo)
          
        # nameSplitRepo = nameRepo.split("/")
        # GITHUB_REPO_ACTOR = nameSplitRepo[0]
        # GITHUB_REPO_NAME=nameSplitRepo[1]
        # print("GITHUB_REPO_ACTOR: ", GITHUB_REPO_ACTOR)
        # print("GITHUB_REPO_NAME: ", GITHUB_REPO_NAME)
        shell: python
      - name: Default ENV Variables
        run: |
          echo "HOME: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTION: ${GITHUB_ACTION}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"

#==============================================================================================================

  Deploy-Application:
    runs-on: windows-latest
    needs: ["Build_application"]
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Directory Powershell
        run: Get-Location # In bash would be run "pwd"
      - name: Directory Bash
        run: pwd
        shell: bash
